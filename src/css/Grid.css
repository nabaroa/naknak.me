@import "~bootstrap/less/variables.less";

@supports (display: grid) and (grid-template-columns:repeat(3,1fr)) and (grid-row-gap:1%) and (grid-gap:1%) and (grid-column-gap:1%) {
  .d-grid {
    display: grid;

    &--md {
      @media all and (max-width: @screen-md) {
        display: block;
      }
    }
  }

  .grid--1-1-1-1-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);
    }

    &--md {
      @media all and (max-width: @screen-md) {
        grid-template-columns: repeat(5, 1fr);
      }
    }
  }

  .grid--1-1-1-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(4, 1fr);
    }

    &--md {
      @media all and (max-width: @screen-md) {
        grid-template-columns: repeat(4, 1fr);
      }
    }
  }

  .grid--1-1-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(3, 1fr);
    }

    &--md {
      @media all and (max-width: @screen-md) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
  }

  .grid--1-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(2, 1fr);
    }

    &--md {
      @media all and (max-width: @screen-md) {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }

  /* 5 columns */

  .grid--4-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);

      > *:first-child {
        grid-column: 1 / span 4;
      }

      > *:nth-child(2) {
        grid-column: 5;
      }
    }
  }

  .grid--3-2 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);

      > *:first-child {
        grid-column: 1 / span 3;
      }

      > *:nth-child(2) {
        grid-column: 4 / span 2;
      }
    }
  }

  .grid--2-3 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);

      > *:first-child {
        grid-column: 1 / span 2;
      }

      > *:nth-child(2) {
        grid-column: 3 / span 3;
      }
    }
  }

  .grid--1-4 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);

      > *:nth-child(2) {
        grid-column: 2 / span 4;
      }
    }
  }

  .grid--1-3-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(5, 1fr);

      > *:first-child {
        grid-column: 1;
      }

      > *:nth-child(2) {
        grid-column: 2 / span 3;
      }

      > *:nth-child(3) {
        grid-column: 5;
      }
    }
  }

  /* 4 columns */

  .grid--3-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(4, 1fr);

      > *:first-child {
        grid-column: 1 / span 3;
      }
    }
  }

  .grid--1-3 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(4, 1fr);

      > *:nth-child(2) {
        grid-column: 2 / span 3;
      }
    }
  }

  .grid--1-2-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(4, 1fr);

      > *:nth-child(2) {
        grid-column: 2 / span 2;
      }

      > *:nth-child(3) {
        grid-column: 4;
      }
    }
  }

  .grid--2-1 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(3, 1fr);

      > *:first-child {
        grid-column: 1 / span 2;
      }
    }
  }

  .grid--1-2 {
    @media all and (min-width: @screen-md) {
      grid-template-columns: repeat(3, 1fr);

      > *:nth-child(2) {
        grid-column: 2 / span 2;
      }
    }
  }
}

/* Gaps */

[class^="grid--"], [class*=" grid--"] {
  grid-gap: calc(var(--spacer) * 4);

  [class^="grid--"], [class*=" grid--"]  {
    grid-gap: calc(var(--spacer) * 2);
  }
}

.justify-self-center {
  > * {
    justify-self: center;
  }
}

.align-self-center {
  > * {
    align-self: center;
  }
}

.no-gap {
  grid-gap: 0;
}

.grid-row-gap--6 {
  grid-row-gap: calc(var(--spacer) * 6);
}

/* Items */

.grid__item--1-2 {
  grid-column: 1 / span 2;
}

.grid__item--1-3 {
  grid-column: 1 / span 3;
}

.grid__item--2-3 {
  grid-column: 2 / span 3;
}

.grid__item--span {
  grid-column: span 2;
}

.grid__item--full {
  grid-column: 1/ span 3;
}
